// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Susa.Core.Entities;

namespace Susa.Core.Entities.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Susa.Core.Entities.Models.Broadcast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Acceptance_Time");

                    b.Property<int>("Classification_Type_Id");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<int?>("Location_Id");

                    b.Property<int>("Number_of_Requested_Surveyor");

                    b.Property<int>("Rang");

                    b.Property<string>("Rattings");

                    b.Property<int>("Rejection_Time");

                    b.Property<int>("Surveyor_Expertise_Type_Id");

                    b.HasKey("Id");

                    b.ToTable("Broadcasts");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Classification_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Classification_Types");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Live_Surveyors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area");

                    b.Property<string>("Descriptions");

                    b.Property<string>("Lat");

                    b.Property<string>("Lng");

                    b.Property<long?>("SurveyorRefId");

                    b.HasKey("Id");

                    b.HasIndex("SurveyorRefId")
                        .IsUnique()
                        .HasFilter("[SurveyorRefId] IS NOT NULL");

                    b.ToTable("Live_Surveyors");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("State");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Survey_Case", b =>
                {
                    b.Property<long>("Survey_Case_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaID");

                    b.Property<bool?>("AssessmentCase");

                    b.Property<DateTime?>("Assigned_DateTime");

                    b.Property<long?>("Case_Type_Id");

                    b.Property<int?>("CityID");

                    b.Property<string>("CmpnyName");

                    b.Property<long?>("Company_Id");

                    b.Property<string>("Customer_Address");

                    b.Property<string>("Customer_LandLine");

                    b.Property<string>("Customer_Mobile");

                    b.Property<string>("Customer_Name");

                    b.Property<DateTime?>("DateofAllotmentofsurvey");

                    b.Property<DateTime?>("DateofSurvey");

                    b.Property<bool?>("DelayinIntimation");

                    b.Property<string>("EmailID");

                    b.Property<string>("InspectionOfficialContactNo");

                    b.Property<string>("InspectionOfficialName");

                    b.Property<string>("InsuredAddress");

                    b.Property<string>("InsuredContactNo");

                    b.Property<string>("InsuredMobile");

                    b.Property<string>("InsuredName");

                    b.Property<string>("IntimationDelayReason");

                    b.Property<string>("Intimation_Date");

                    b.Property<string>("Intimation_PlaceG");

                    b.Property<string>("Intimation_Time");

                    b.Property<int?>("IsEstimateSubmitted");

                    b.Property<string>("PlaceofSurvey");

                    b.Property<string>("Policy_End_Date");

                    b.Property<string>("Policy_Start_Date");

                    b.Property<string>("Policy_Type");

                    b.Property<string>("Policy_Value");

                    b.Property<string>("SLNO");

                    b.Property<long?>("SURVEY_CASE_SERIALNO");

                    b.Property<int?>("StateID");

                    b.Property<DateTime?>("Status_Change_DateTime");

                    b.Property<DateTime?>("Survey_Case_Date");

                    b.Property<string>("Survey_Case_No");

                    b.Property<string>("Survey_ClaimNO");

                    b.Property<string>("Survey_GeoCodes");

                    b.Property<string>("Survey_Location");

                    b.Property<string>("Survey_PolicyNO");

                    b.Property<int?>("Survey_Status_ID");

                    b.Property<long?>("Surveyor_ID");

                    b.Property<int?>("TemplateID");

                    b.Property<int?>("USERID");

                    b.Property<int?>("WorkShopId");

                    b.Property<string>("WorkShopNotes");

                    b.HasKey("Survey_Case_ID");

                    b.ToTable("Survey_Cases");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Survey_Case_Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Survey_Case_Status");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Survey_Case_Vehicle_Detail", b =>
                {
                    b.Property<long>("Survey_Case_Vehicle_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNG_KIT_Status");

                    b.Property<string>("ChasisNo");

                    b.Property<string>("Class_Vehicle");

                    b.Property<string>("Color");

                    b.Property<string>("CubicCapacity");

                    b.Property<string>("EngineNo");

                    b.Property<string>("FUELTYPE");

                    b.Property<string>("FitnessNo");

                    b.Property<DateTime?>("Fitness_Ceertificate_Validate_Date");

                    b.Property<string>("Hypo");

                    b.Property<int?>("IsRCAvailable");

                    b.Property<string>("Laden_Wt");

                    b.Property<string>("Make");

                    b.Property<string>("MgfYear");

                    b.Property<string>("Model");

                    b.Property<long?>("Motor_Vehicle_Id");

                    b.Property<string>("OdometerReading");

                    b.Property<DateTime?>("PermitValidUpto");

                    b.Property<string>("Permit_Area");

                    b.Property<string>("Permit_No");

                    b.Property<string>("Pre_Accident_Condition");

                    b.Property<string>("REGISTRATIONDATE");

                    b.Property<string>("RegisteredOwner");

                    b.Property<string>("Registration_No");

                    b.Property<string>("Road_Tax_ValidUpto");

                    b.Property<long?>("Survey_Case_ID");

                    b.Property<string>("Transfer_Date");

                    b.Property<string>("Type_of_Permit");

                    b.Property<string>("Unladen_Wt");

                    b.Property<string>("VARIANT");

                    b.Property<int?>("VINSearchFound");

                    b.Property<string>("seating_capacity");

                    b.HasKey("Survey_Case_Vehicle_Id");

                    b.ToTable("Survey_Case_Vehicle_Details");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Survey_Tracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Check_In_Time");

                    b.Property<int>("Check_Out_Location_Id");

                    b.Property<int>("Check_Out_Time");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<int>("Job_Start_Location_Id");

                    b.Property<DateTime>("Job_Start_Time");

                    b.Property<int>("Survey_Case_Id");

                    b.Property<int>("Surveyor_Id");

                    b.Property<int>("Total_Distance");

                    b.Property<int>("Vehicle_Type_Id");

                    b.HasKey("Id");

                    b.ToTable("Survey_Trackings");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Surveyor", b =>
                {
                    b.Property<long>("Surveyor_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccNo");

                    b.Property<string>("BankAddress");

                    b.Property<string>("BankName");

                    b.Property<string>("BillAddress");

                    b.Property<long?>("COMPANY_ID");

                    b.Property<int?>("CaseAllocation");

                    b.Property<int?>("CaseTypeAllowed");

                    b.Property<int?>("CityID");

                    b.Property<string>("IFSCCode");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("MICRCode");

                    b.Property<int?>("NoOfCases");

                    b.Property<string>("SURVEYOR_COMPANY_NAME");

                    b.Property<int?>("StateID");

                    b.Property<string>("SurveyorCode");

                    b.Property<string>("Surveyor_Address");

                    b.Property<string>("Surveyor_EmailId");

                    b.Property<string>("Surveyor_GSTIN");

                    b.Property<string>("Surveyor_LandLine");

                    b.Property<string>("Surveyor_License_Expiry_Date");

                    b.Property<string>("Surveyor_License_No");

                    b.Property<string>("Surveyor_MobileNo");

                    b.Property<string>("Surveyor_Name");

                    b.Property<string>("Surveyor_PAN");

                    b.Property<bool?>("WatermarkYNG");

                    b.HasKey("Surveyor_Id");

                    b.ToTable("Surveyors");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Surveyor_Expertise_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Surveyor_Expertise_Types");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int?>("Company_ID");

                    b.Property<string>("ContactNo");

                    b.Property<int?>("CreadtedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime?>("Date");

                    b.Property<string>("EmailId");

                    b.Property<string>("IsActive");

                    b.Property<string>("Password");

                    b.Property<int?>("Surveyor_Id");

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UserName");

                    b.Property<string>("UserPassword");

                    b.Property<int?>("User_Type_Id");

                    b.Property<int?>("WorkshopId");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.User_Type", b =>
                {
                    b.Property<long>("User_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("User_Type_name");

                    b.HasKey("User_Type_Id");

                    b.ToTable("User_Types");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Vehicle_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Vehicle_Types");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.WorkShop", b =>
                {
                    b.Property<int>("WorkShopId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ContactName");

                    b.Property<string>("ContactNumber");

                    b.Property<string>("GSTIN");

                    b.Property<string>("Location");

                    b.Property<string>("WorkShopName");

                    b.HasKey("WorkShopId");

                    b.ToTable("WorkShops");
                });

            modelBuilder.Entity("Susa.Core.Entities.Models.Live_Surveyors", b =>
                {
                    b.HasOne("Susa.Core.Entities.Models.Surveyor", "Surveyor")
                        .WithOne("Live_Surveyors")
                        .HasForeignKey("Susa.Core.Entities.Models.Live_Surveyors", "SurveyorRefId");
                });
#pragma warning restore 612, 618
        }
    }
}
